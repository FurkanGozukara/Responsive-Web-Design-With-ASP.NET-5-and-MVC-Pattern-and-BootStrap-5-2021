#pragma checksum "C:\Users\Furkan Gözükara\Desktop\mvc asp.net bootstrap\lectures\lecture 15\Views\Lecture15\Lec15Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "12d9cae5af3b6915daf419800e6af095066c09e7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Lecture15_Lec15Index), @"mvc.1.0.view", @"/Views/Lecture15/Lec15Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 9 "C:\Users\Furkan Gözükara\Desktop\mvc asp.net bootstrap\lectures\lecture 15\Views\_ViewImports.cshtml"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Furkan Gözükara\Desktop\mvc asp.net bootstrap\lectures\lecture 15\Views\_ViewImports.cshtml"
using Microsoft.Extensions.Options;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Furkan Gözükara\Desktop\mvc asp.net bootstrap\lectures\lecture 15\Views\_ViewImports.cshtml"
using static lecture_9.GlobalMethods;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"12d9cae5af3b6915daf419800e6af095066c09e7", @"/Views/Lecture15/Lec15Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"726bffed9337dbeef8f2b70d93e13c12af941aa8", @"/Views/_ViewImports.cshtml")]
    public class Views_Lecture15_Lec15Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<style>
    td {
        border-style: solid;
        border-width: 1px;
    }
</style>


<div class=""container"">
    <div class=""row"">
        <div class=""col"">
            1 of 3
        </div>
        <div class=""col-6"">
            2 of 3 (wider)
        </div>
        <div class=""col"">
            3 of 3
        </div>
    </div>
    <div class=""row"">
        <div class=""col"">
            1 of 3
        </div>
        <div class=""col-5"">
            2 of 3 (wider)
        </div>
        <div class=""col"">
            3 of 3
        </div>
    </div>
</div>

<br />
<br />

<table>
    <tr>
        <td>
            Column
        </td>
        <td>
            Column
        </td>
        <td>
            Column
        </td>
    </tr>
</table>

Column
<br />
<br />
<div class=""container-lg"">
    <div class=""row"">
        <div class=""col border border-2"">
            Column
        </div>
        <div class=""col border border-2"">
            Colum");
            WriteLiteral(@"n
        </div>
    </div>
    <div class=""container-sm"">
        <div class=""row"">
            <div class=""col border border-2"">
                Column
            </div>
            <div class=""col border border-2"">
                Column
            </div>
            <div class=""col border border-2"">
                Column
            </div>
        </div>
    </div>
</div>
<br />
<br />
<br />
<br />
<div class=""container-fluid border border-primary border-2"">
    Use .container-fluid for a full width container, spanning the entire width of the viewport.
</div>
<div class=""container-sm border border-primary border-2"">100% wide until small breakpoint</div>
<div class=""container-md border border-primary border-2"">100% wide until medium breakpoint</div>
<div class=""container-lg border border-primary border-2"">100% wide until large breakpoint</div>
<div class=""container-xl border border-primary border-2"">100% wide until extra large breakpoint</div>
<div class=""container-xxl borde");
            WriteLiteral("r border-primary border-2\">100% wide until extra extra large breakpoint</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IOptions<lecture_9.MyOptions> OptionsAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IConfiguration Configuration { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
