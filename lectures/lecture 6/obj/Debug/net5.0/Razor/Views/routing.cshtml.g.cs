#pragma checksum "C:\Users\Furkan Gözükara\Desktop\mvc asp.net bootstrap\lectures\lecture 6\Views\routing.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e01cc97d0fb1e5b71894b52811351fba820019d3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_routing), @"mvc.1.0.view", @"/Views/routing.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e01cc97d0fb1e5b71894b52811351fba820019d3", @"/Views/routing.cshtml")]
    public class Views_routing : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("ltr"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e01cc97d0fb1e5b71894b52811351fba820019d33061", async() => {
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"" integrity=""sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4"" crossorigin=""anonymous"">
    <link rel=""icon"" type=""image/png"" href=""/favicon.png"">
    <link href=""/bundles/css?v=yTyW6PBSEBZGGNK7du5vRJk3huBylHvK-yxnBXfKbfg1"" rel=""stylesheet"" />

    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script type=""text/javascript"" src=""https://me.kis.v2.scr.kaspersky-labs.com/FD126C42-EBFA-4E12-B309-BB3FDD723AC1/main.js?attr=m_riSoItLkBrQVARH5wojQOs_miNyy__-VA_0sm2rRkc60JhZvzmTaBSXNDs_mplMHdS6Sh2-RqKX06WG0jj2HZIbrxYDSgUMD2bZ5j4WBE"" charset=""UTF-8""></script>
    <script async src=""https://www.googletagmanager.com/gtag/js?id=UA-263021-54""></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-263021-54');
    </script>
    <meta name");
                WriteLiteral(@"=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">
    <title>Routing Templates - The ASP.NET Core MVC Tutorial</title>


    <script async src=""https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js""></script>
    <script>
        (adsbygoogle = window.adsbygoogle || []).push({
            google_ad_client: ""ca-pub-1132262176862667"",
            enable_page_level_ads: true
        });
    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e01cc97d0fb1e5b71894b52811351fba820019d35572", async() => {
                WriteLiteral(@"
    <div id=""page"">
        <div id=""page-top-ad"">


        </div>
        <div id=""top"" class=""clearfix"">

            <div id=""top-logo"">
                <a href=""/""><i class=""fa fa-graduation-cap logo""></i></a>

                <div id=""site-title""><a href=""/"">ASP.NET MVC Tutorial</a></div>
            </div>
            <a id=""lnkToc"" href=""#sidr-main"">TOC<i class=""fa fa-bars""></i> </a>
        </div>
        <div id=""content-container"" class=""clearfix"">
            <aside id=""sidebar"">
                <div id=""divSidrTop"">
                    Table of Contents
                    <a href=""javascript:void(0);"" onclick=""$.sidr('close', 'sidr-toc');"" style=""float: right;""><i class=""fa fa-times""></i></a>
                </div>
                <nav id=""toc"">




                    <div class=""chapter"">
                        <h3 style=""margin-bottom: 10px;"">Download as PDF</h3>
                        <img src=""/images/icons/file_extension_pdf.png"" alt=""PDF"" style=""float: left;");
                WriteLiteral(@" margin-right: 10px;"" />
                        <a href=""/download-asp-net-mvc-tutorial-pdf/"" title=""Download ASP.NET MVC Tutorial as a PDF file now"" style=""color: #228b22;"">Download this entire tutorial as <b>PDF</b> right now!</a>
                        <div class=""floatstop""></div>
                    </div>
                    <div class=""chapter"" id=""child-toc"">
                        <h3>Chapter/article TOC</h3>
                        <ol>
                            <li>
                                <a href=""/routing/introduction/"">
                                    Introduction
                                </a>
                            </li>
                            <li>
                                <a href=""/routing/the-anatomy-of-an-mvc-route/"">
                                    The anatomy of an MVC Route
                                </a>
                            </li>
                            <li>
                                <a href=""/routing/a");
                WriteLiteral(@"ttribute-routing/"">
                                    Attribute routing
                                </a>
                            </li>
                            <li class=""selected"">
                                <a href=""/routing/routing-templates/"">
                                    Routing Templates
                                </a>
                                <ul>
                                    <li class=""header-level2"">
                                        <a href=""#aelm7305"">
                                            Catch-all parameters

                                        </a>
                                    </li>
                                    <li class=""header-level2"">
                                        <a href=""#aelm7311"">
                                            Optional parameters

                                        </a>
                                    </li>
                                    <li class=""header-le");
                WriteLiteral(@"vel2"">
                                        <a href=""#aelm7319"">
                                            Reserved routing names

                                        </a>
                                    </li>
                                    <li class=""header-level2"">
                                        <a href=""#aelm7322"">
                                            Summary

                                        </a>
                                    </li>
                                </ul>
                            </li>
                            <li>
                                <a href=""/routing/routing-constraints/"">
                                    Routing Constraints
                                </a>
                            </li>
                        </ol>
                    </div>
                    <div class=""ad"">

                    </div>
                    <div class=""chapter"">
                        <h3>

           ");
                WriteLiteral(@"                 Introduction
                        </h3>
                        <ul>
                            <li>
                                <a href=""/introduction/what-is-mvc/"">
                                    What is MVC?
                                </a>

                            </li>
                            <li>
                                <a href=""/introduction/what-is-asp-net-mvc/"">
                                    What is ASP.NET MVC?
                                </a>

                            </li>
                            <li>
                                <a href=""/introduction/asp-net-mvc-vs-web-forms/"">
                                    ASP.NET MVC vs. Web Forms
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Getting Started
                     ");
                WriteLiteral(@"   </h3>
                        <ul>
                            <li>
                                <a href=""/getting-started/visual-studio-community/"">
                                    Visual Studio Community
                                </a>

                            </li>
                            <li>
                                <a href=""/getting-started/hello-mvc-world/"">
                                    Hello, MVC World!
                                </a>

                            </li>
                            <li>
                                <a href=""/getting-started/creating-a-controller/"">
                                    Creating a Controller
                                </a>

                            </li>
                            <li>
                                <a href=""/getting-started/creating-a-view/"">
                                    Creating a View
                                </a>

                            <");
                WriteLiteral(@"/li>
                            <li>
                                <a href=""/getting-started/creating-a-model/"">
                                    Creating a Model
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Razor
                        </h3>
                        <ul>
                            <li>
                                <a href=""/razor/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/razor/basic-razor-syntax/"">
                                    Basic Razor syntax
                                </a>

                            </li>
                            <li>
                                <a href=""/razor/vari");
                WriteLiteral(@"ables/"">
                                    Variables
                                </a>

                            </li>
                            <li>
                                <a href=""/razor/if-statements/"">
                                    IF Statements
                                </a>

                            </li>
                            <li>
                                <a href=""/razor/loops/"">
                                    Loops
                                </a>

                            </li>
                            <li>
                                <a href=""/razor/the-switch-statement/"">
                                    The switch statement
                                </a>

                            </li>
                            <li>
                                <a href=""/razor/local-functions/"">
                                    Local Functions
                                </a>

                     ");
                WriteLiteral(@"       </li>
                            <li>
                                <a href=""/razor/templated-delegates/"">
                                    Templated delegates
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Controllers
                        </h3>
                        <ul>
                            <li>
                                <a href=""/controllers/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/controllers/actions/"">
                                    Actions
                                </a>

                            </li>
                            <li>
                                <a href=""/controller");
                WriteLiteral(@"s/action-results/"">
                                    Action Results
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Views
                        </h3>
                        <ul>
                            <li>
                                <a href=""/views/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/views/view-discovery-connecting-controller-view/"">
                                    View Discovery: Connecting Controller &amp; View
                                </a>

                            </li>
                            <li>
                                <a href=""/views/passing-data-into-views/"">
                       ");
                WriteLiteral(@"             Passing data into Views
                                </a>

                            </li>
                            <li>
                                <a href=""/views/partial-views/"">
                                    Partial Views
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""ad"">

                    </div>
                    <div class=""chapter"">
                        <h3>

                            Layout
                        </h3>
                        <ul>
                            <li>
                                <a href=""/layout/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/layout/layout-files/"">
                                    Layout Files
           ");
                WriteLiteral(@"                     </a>

                            </li>
                            <li>
                                <a href=""/layout/the-viewstart-file/"">
                                    The ViewStart file
                                </a>

                            </li>
                            <li>
                                <a href=""/layout/sections/"">
                                    Sections
                                </a>

                            </li>
                            <li>
                                <a href=""/layout/the-viewimports-file/"">
                                    The ViewImports file
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Routing
                        </h3>
                        <ul>
                            <li>");
                WriteLiteral(@"
                                <a href=""/routing/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/routing/the-anatomy-of-an-mvc-route/"">
                                    The anatomy of an MVC Route
                                </a>

                            </li>
                            <li>
                                <a href=""/routing/attribute-routing/"">
                                    Attribute routing
                                </a>

                            </li>
                            <li class=""selected"">
                                <a href=""/routing/routing-templates/"">
                                    Routing Templates
                                </a>

                            </li>
                            <li>
                                <a href=""/routing/ro");
                WriteLiteral(@"uting-constraints/"">
                                    Routing Constraints
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Models
                        </h3>
                        <ul>
                            <li>
                                <a href=""/models/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/models/viewmodels/"">
                                    ViewModels
                                </a>

                            </li>
                            <li>
                                <a href=""/models/model-binding/"">
                                    Model Binding
                                </a>

 ");
                WriteLiteral(@"                           </li>
                            <li>
                                <a href=""/models/data-annotations/"">
                                    DataAnnotations
                                </a>

                            </li>
                            <li>
                                <a href=""/models/model-validation/"">
                                    Model Validation
                                </a>

                            </li>
                            <li>
                                <a href=""/models/types-of-model-validation-dataannotations/"">
                                    Types of Model Validation DataAnnotations
                                </a>

                            </li>
                            <li>
                                <a href=""/models/custom-model-validation/"">
                                    Custom Model Validation
                                </a>

                            </");
                WriteLiteral(@"li>
                            <li>
                                <a href=""/models/client-side-model-validation/"">
                                    Client-side Model Validation
                                </a>

                            </li>
                            <li>
                                <a href=""/models/manual-model-validation-with-data-annotations/"">
                                    Manual Model validation with Data Annotations
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Tag Helpers
                        </h3>
                        <ul>
                            <li>
                                <a href=""/tag-helpers/introduction/"">
                                    Introduction
                                </a>

                            </li>
     ");
                WriteLiteral(@"                       <li>
                                <a href=""/tag-helpers/using-tag-helpers/"">
                                    Using Tag Helpers
                                </a>

                            </li>
                            <li>
                                <a href=""/tag-helpers/the-form-tag-helper/"">
                                    The Form Tag Helper
                                </a>

                            </li>
                            <li>
                                <a href=""/tag-helpers/the-label-tag-helper/"">
                                    The Label Tag Helper
                                </a>

                            </li>
                            <li>
                                <a href=""/tag-helpers/the-input-tag-helper/"">
                                    The Input Tag Helper
                                </a>

                            </li>
                            <li>
                   ");
                WriteLiteral(@"             <a href=""/tag-helpers/the-textarea-tag-helper/"">
                                    The Textarea Tag Helper
                                </a>

                            </li>
                            <li>
                                <a href=""/tag-helpers/the-select-tag-helper/"">
                                    The Select Tag Helper
                                </a>

                            </li>
                            <li>
                                <a href=""/tag-helpers/the-anchor-tag-helper/"">
                                    The Anchor Tag Helper
                                </a>

                            </li>
                            <li>
                                <a href=""/tag-helpers/the-script-tag-helper/"">
                                    The Script Tag Helper
                                </a>

                            </li>
                            <li>
                                <a href=""/tag-h");
                WriteLiteral(@"elpers/the-link-tag-helper/"">
                                    The Link Tag Helper
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""ad"">

                    </div>
                    <div class=""chapter"">
                        <h3>

                            Core Concepts
                        </h3>
                        <ul>
                            <li>
                                <a href=""/core-concepts/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/core-concepts/serving-static-files/"">
                                    Serving static files
                                </a>

                            </li>
                            <li>
                                <a href=""");
                WriteLiteral(@"/core-concepts/handling-exceptions/"">
                                    Handling Exceptions
                                </a>

                            </li>
                            <li>
                                <a href=""/core-concepts/handling-errors-404-etc/"">
                                    Handling Errors (404 etc.)
                                </a>

                            </li>
                            <li>
                                <a href=""/core-concepts/configuration/"">
                                    Configuration
                                </a>

                            </li>
                            <li>
                                <a href=""/core-concepts/options/"">
                                    Options
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

      ");
                WriteLiteral(@"                      HttpContext
                        </h3>
                        <ul>
                            <li>
                                <a href=""/httpcontext/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/httpcontext/query-string-get-data/"">
                                    Query String (GET data)
                                </a>

                            </li>
                            <li>
                                <a href=""/httpcontext/forms-post-data/"">
                                    Forms (POST data)
                                </a>

                            </li>
                            <li>
                                <a href=""/httpcontext/cookies/"">
                                    Cookies
                                </a>

                         ");
                WriteLiteral(@"   </li>
                            <li>
                                <a href=""/httpcontext/sessions/"">
                                    Sessions
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Caching
                        </h3>
                        <ul>
                            <li>
                                <a href=""/caching/introduction/"">
                                    Introduction
                                </a>

                            </li>
                            <li>
                                <a href=""/caching/responsecache/"">
                                    ResponseCache
                                </a>

                            </li>
                            <li>
                                <a href=""/caching/outputcache/"">
      ");
                WriteLiteral(@"                              OutputCache
                                </a>

                            </li>
                            <li>
                                <a href=""/caching/in-memory-caching-with-imemorycache/"">
                                    In-memory caching with IMemoryCache
                                </a>

                            </li>
                        </ul>
                    </div>
                    <div class=""chapter"">
                        <h3>

                            Working with databases
                        </h3>
                        <ul>
                            <li>
                                <a href=""/working-with-databases/introduction-picking-a-database/"">
                                    Introduction: Picking a database
                                </a>

                            </li>
                            <li>
                                <a href=""/working-with-databases/picking-");
                WriteLiteral(@"a-database-framework/"">
                                    Picking a database framework
                                </a>

                            </li>
                            <li>
                                <a href=""/working-with-databases/getting-started/"">
                                    Getting started
                                </a>

                            </li>
                            <li>
                                <a href=""/working-with-databases/todo-list-models-viewmodels-helpers/"">
                                    TODO List: Models, ViewModels &amp; Helpers
                                </a>

                            </li>
                            <li>
                                <a href=""/working-with-databases/todo-list-the-view/"">
                                    TODO List: The View
                                </a>

                            </li>
                            <li>
                            ");
                WriteLiteral(@"    <a href=""/working-with-databases/todo-list-the-controller/"">
                                    TODO List: The Controller
                                </a>

                            </li>
                        </ul>
                    </div>

                </nav>
            </aside>
            <div id=""content"">
                <ul class=""nav nav-pills nav-fill"" id=""top-menu"">
                    <li class=""nav-item"" title=""Login"">
                        <a href=""#"" onclick=""LoginOrOut(false);"">
                            <i class=""fa fa-user""></i>
                        </a>
                    </li>
                    <li class=""nav-item current"">
                        <a href=""/"">
                            ASP.NET MVC
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""http://asp.net-tutorials.com/"" title=""The complete ASP.NET WebForms tutorial"">
                            ASP.NE");
                WriteLiteral(@"T WebForms
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""http://csharp.net-tutorials.com/"" title=""The complete C# tutorial"">
                            C#
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""http://css3-tutorial.net/"" title=""The complete CSS3 tutorial"">
                            CSS3
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""http://html5-tutorial.net/"" title=""The complete HTML5 tutorial"">
                            HTML5
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""http://jquery-tutorial.net/"" title=""The complete jQuery tutorial"">
                            jQuery
                        </a>
                    </li>
                   ");
                WriteLiteral(@" <li class=""nav-item"">
                        <a href=""http://php5-tutorial.com/"" title=""The complete PHP tutorial"">
                            PHP5
                        </a>
                    </li>
                    <li class=""nav-item"">
                        <a href=""http://wpf-tutorial.com/"" title=""The complete WPF tutorial"">
                            WPF
                        </a>
                    </li>
                </ul>
                <div id=""user-bar"" data-is-logged-in=""0"">

                </div>
                <article>
                    <div id=""chapter-title"">Routing:</div>
                    <h1 id=""aelm0"" data-element-id=""0"">Routing Templates</h1><p id=""aelm6130"" data-element-id=""6130"">So far, the routes we have used have been very basic - a static path, sometimes combined with a simple, variable parameter. However, the routing system in ASP.NET MVC has a LOT more to offer. You can in fact create very advanced URL routes, using route templates. We'll loo");
                WriteLiteral(@"k into some of the possibilities in this article.</p><p id=""aelm7296"" data-element-id=""7296"">In a previous article, we used the {id} syntax to map a part of the URL to a parameter called ""id"" in the receiving controller method. This is one of the most basic routing templates you can use, but you are not limited to using just one variable/parameter in your routes. In fact, you can use as many as you want and you are free to combine them in any way you see fit. This could, for example, be used to create a URL with both an ID and a slug, as seen in many blog systems like Wordpress etc.</p><p id=""aelm7297"" data-element-id=""7297"">Here's an example of a routing template where we combine two parameters to create the classical <em>[ID]/[URL_SLUG]</em> URL:</p><pre id=""aelm7298"" data-element-id=""7298"" class=""prettyprint""><code>[Route(""blog/{entryId}/{slug}"")]<br>public IActionResult Blog(int entryId, string slug)<br>{<br>&nbsp; &nbsp; return Content($""Blog entry with ID #{entryId} requested (URL Slug: {slug})"");<br>}<");
                WriteLiteral(@"/code></pre><p id=""aelm7301"" data-element-id=""7301"">You can now reach this action using a URL like this:</p><pre id=""aelm7299"" data-element-id=""7299"" class=""prettyprint""><code>/blog/153/testing-asp-mvc-routes/</code></pre>			<input type=""hidden"" name=""IL_IN_ARTICLE"">
                    <p id=""aelm7300"" data-element-id=""7300"">""153"" will then be mapped to the <em>entryId</em> parameter, while ""testing-asp-mvc-routes"" will be mapped to the <em>slug</em> parameter and based on that, the following output will be generated by our action method:</p><pre id=""aelm7302"" data-element-id=""7302"" class=""prettyprint""><code>Blog entry with ID #153 requested (URL Slug: testing-asp-mvc-routes)</code></pre><h2 id=""aelm7305"" data-element-id=""7305"">
                        Catch-all parameters
                    </h2><p id=""aelm7303"" data-element-id=""7303"">If you test the above route, you will notice that your slug can't contain forward slashes (/), like this one:</p><pre id=""aelm7304"" data-element-id=""7304"" class=""prettypri");
                WriteLiteral(@"nt""><code>/blog/153/testing-the/routing-system/ &nbsp;</code></pre><p id=""aelm7306"" data-element-id=""7306"">The reason is probably obvious: The forward slash is normally used in URL's to separate folder names, and even though your route doesn't necessarily relate to a specific folder, the forward slash still has a special meaning. In this case, it would seem that you are trying to reach either two folders or two parameters with the values ""testing-the"" and ""routing-system"". This might not be what you want, though - perhaps in your system, it makes sense to allow forward slashes as part of the URL slug. For situations like this, ASP.NET MVC includes the so-called <strong>catch-all parameters</strong>.</p><p id=""aelm7307"" data-element-id=""7307"">A catch-all parameter is created by prefixing the name of the parameter with an asterisk (*) character, like this:</p><pre id=""aelm7309"" data-element-id=""7309"" class=""prettyprint""><code>[Route(""blog/{entryId}/{*slug}"")]<br>public IActionResult Blog(int entryId, string slu");
                WriteLiteral(@"g)<br>{<br>&nbsp; &nbsp; return Content($""Blog entry with ID #{entryId} requested (URL Slug: {slug})"");<br>}</code></pre><p id=""aelm7308"" data-element-id=""7308"">Our URL from before will now allow for the forward slash in the slug parameter:</p><pre id=""aelm7310"" data-element-id=""7310"" class=""prettyprint""><code>URL: &nbsp;<br>/blog/153/testing-the/routing-system/ &nbsp; &nbsp;<br><br>Output:<br>Blog entry with ID #153 requested (URL Slug: testing-asp/mvc-routes)</code></pre><h2 id=""aelm7311"" data-element-id=""7311"">
                        Optional parameters
                    </h2><p id=""aelm7312"" data-element-id=""7312"">In the examples above, both the <em>entryId</em> and the <em>slug</em> parameters were required - if omitted in the URL, the route template would simply not match the requested URL and the result will be either a ""404 Page not Found"" or it would be caught by the default/fallback route. However, sometimes you want to make one or several paramters optional, meaning that they can be omitted wi");
                WriteLiteral(@"thout the route failing to match the URL request.</p><p id=""aelm7313"" data-element-id=""7313"">For instance, you may decide that the URL slug for your blog posts should be optional - after all, the ID is enough to identify the desired blog post and display it to the user, while the slug part is often included for SEO/readability reasons. Making the slug part of the URL optional is as simple as adding a question mark (?) to the parameter name:</p><pre id=""aelm7314"" data-element-id=""7314"" class=""prettyprint""><code>[Route(""blog/{entryId}/{slug?}"")]<br>public IActionResult Blog(int entryId, string slug)<br>{<br>&nbsp; &nbsp; return Content($""Blog entry with ID #{entryId} requested (URL Slug: {slug})"");<br>}</code></pre><p id=""aelm7315"" data-element-id=""7315"">You can now call the action method with a URL like this one:</p><pre id=""aelm7316"" data-element-id=""7316"" class=""prettyprint""><code>/blog/153/</code></pre><p id=""aelm7317"" data-element-id=""7317"">If you do so, the <em>slug</em> parameter will be NULL. This is no");
                WriteLiteral(@"t a problem when using it for output the way we do, but if you tried using the value for other purposes, it could result in a NullReferenceException. To remedy this, you should either check for NULL before using it, or, if it makes more sense in your case, add a default string value to the parameter (empty or non-empty) like this:</p><pre id=""aelm7318"" data-element-id=""7318"" class=""prettyprint""><code>[Route(""blog/{entryId}/{slug?}"")]<br>public IActionResult Blog(int entryId, string slug = """") <br>{<br>&nbsp; &nbsp; ....</code></pre><h2 id=""aelm7319"" data-element-id=""7319"">
                        Reserved routing names
                    </h2><p id=""aelm7320"" data-element-id=""7320"">When creating your routes and specifying, for instance, parameter names, you should pay attention to the following words, which are reserved within the routing system and therefore shouldn't be used as names/parameter names:</p><ul id=""aelm7321"" data-element-id=""7321""><li id=""aelm7324"" data-element-id=""7324"">action</li><li id=""a");
                WriteLiteral(@"elm7325"" data-element-id=""7325"">area</li><li id=""aelm7326"" data-element-id=""7326"">controller</li><li id=""aelm7327"" data-element-id=""7327"">handler</li><li id=""aelm7328"" data-element-id=""7328"">page</li></ul><h2 id=""aelm7322"" data-element-id=""7322"">
                        Summary
                    </h2><p id=""aelm7323"" data-element-id=""7323"">As you can see, URL routing is very flexible when using the template functionality illustrated in this article. However, sometimes a route can become TOO flexible, meaning that it might conflict with other routes in your website. For these situations, among others, you need to take more control of your routes - this can be achieved with <strong>routing constraints</strong>, which we'll discuss in the next article!</p>		<div class=""alert alert-info"" id=""divArticleAvailableLanguages"">
                        This article has been fully translated into the following languages:
                        <div class=""row"">
                            <ul class=""column-list"">");
                WriteLiteral(@"
                                <li class=""col-lg-3 col-sm-4 col-6 available-lang-de"">


                                    <a href=""/de/453/routing/routing-vorlagen/"" style=""font-weight: normal;"">
                                        German
                                    </a>
                                </li>
                                <li class=""col-lg-3 col-sm-4 col-6 available-lang-es"">


                                    <a href=""/es/453/enrutamiento/plantillas-de-ruteo/"" style=""font-weight: normal;"">
                                        Spanish
                                    </a>
                                </li>
                            </ul>
                        </div>
                        Is your preferred language not on the list? <a href=""javascript:void(0);"" onclick=""SelectLanguage();"">Click here</a> to help us translate this article into your language!
                    </div>
                    <div id=""bottom-ad"">

              ");
                WriteLiteral(@"      </div>
                    <hr />
                    <div class=""clearfix"" id=""bottom-navigation"">
                        <a href=""/routing/attribute-routing/"" class=""article-navigation"" title=""Attribute routing"">Previous</a>
                        <a href=""/routing/routing-constraints/"" class=""article-navigation"" style=""float: right;"" title=""Routing Constraints"">Next</a>
                    </div>
                    <script type=""text/javascript"">

                        var Article = { ""Id"": 453, ""LocalizationLanguage"": null, ""ArticleUrl"": ""/routing/routing-templates/"", ""IsLocalizable"": true, ""FullyLocalizedLanguages"": [""de"", ""es""] };
                    </script>

                </article>
                <footer>
                    <p>
                        &copy; asp.mvc-tutorial.com 2007-2021
                    </p>
                    <ul>
                        <li>
                            <a href=""#"" class=""contact-link"">Contact Us</a>
                        <");
                WriteLiteral(@"/li>
                        <li>
                            <a href=""javascript:void(0);"" onclick=""ShowSuggestCorrectionInfo();"">Suggest Correction</a>
                        </li>
                        <li>
                            <a href=""/Localization/"">Localization</a>
                        </li>

                    </ul>
                </footer>
            </div>
        </div>
    </div>
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js""></script>

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"" integrity=""sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ"" crossorigin=""anonymous""></script>
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"" integrity=""sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"" crossorigin=""anonymous""></script>


    <script src=""https://kit.fontawesome.com/20c934e6fb.js"" crossorigin=""anonymou");
                WriteLiteral(@"s""></script>

    <script src=""/bundles/js?v=MLvrMfXunc1sz1m3ZL6HduenFd3sZmOHZ_p5vU7e7gE1""></script>

    <script type=""text/javascript"" src=""/Content/Localizy.ashx""></script>




    <script type=""text/javascript"">
        User.Id = 0;
    </script>





    <script type=""text/javascript"">
        var infolinks_pid = 3223528;
        var infolinks_wsid = 0;
    </script>
    <script type=""text/javascript"" src=""//resources.infolinks.com/js/infolinks_main.js""></script>


");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
